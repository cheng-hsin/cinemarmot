import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import Axios from 'axios';
import React from "react";
import List from '../components/List'
import ListItem from '../components/ListItem'
import Navbar from '../components/Navbar'
import SeatMap from '../components/SeatMap'

import { trpc } from "../utils/trpc";
import { any, string } from "zod";

const Home: NextPage = (props) => {
  interface MyObj {
    movie_id: bigint
    movie_title: string | null
    movie_release: Date | null
    movie_length: string | null
    movie_overview: string | null
    movie_language: string | null
    movie_poster_path: string | null
    movie_leading: string | null
    movie_director: string | null
  };

  let obj: { string: MyObj[] } = JSON.parse(JSON.stringify(props));
  const movies = obj['result']['data']['json'];
  // console.log(typeof movies);


  return (
    <>
      <Head>
        <title>CineMarmot</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <main className="flex min-h-screen flex-col items-center justify-center bg-white">
        <div className="container flex flex-row">
          <div className="pl-20 container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
            <div className="divide-y divide-slate-100">
              <List>
                {movies.map((movie) => (
                  <ListItem key={movie.id} movie={movie} />
                ))}
              </List>
            </div>
          </div>
          <div className="pr-10 container flex flex-col items-center mt-8 ">
            <div className="flex flex-col items-center  sticky top-0 ">
              <AuthShowcase />
              <SeatMap />
            </div>
          </div>
        </div>

      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <>
      <p className="text-center text-2xl text-stone-400 mt-8 mb-2">
        {sessionData ? `Hi ${sessionData.user?.name}, choose your seat!` : "Buy a ticket, go to the cinema, and enjoy the movie!"}
      </p>

    </>
  );
};

export const getStaticProps = async () => {
  const res = await Axios.get("http://localhost:3000/api/trpc/movies.getAll");
  return {
    props: res.data,
  };
}
