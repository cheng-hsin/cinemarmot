import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import Axios from 'axios';
import React from "react";
import List from '../components/List.tsx'
import ListItem from '../components/ListItem.tsx'
import Navbar from '../components/Navbar.tsx'
import SeatMap from '../components/SeatMap.tsx'

import { trpc } from "../utils/trpc";
import { any, string } from "zod";

const Home: NextPage = (props) => {
  interface MyObj {
    movie_id: bigint
    movie_title: string | null
    movie_release: Date | null
    movie_length: string | null
    movie_overview: string | null
    movie_language: string | null
    movie_poster_path: string | null
    movie_leading: string | null
    movie_director: string | null
  };

  let obj: { string: MyObj[] } = JSON.parse(JSON.stringify(props));
  const movies = obj['result']['data']['json'];
  console.log(typeof movies);

  const hello = trpc.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      {/* <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#3d5a80] to-[#cbf3f0]"> */}
      <main className="flex min-h-screen flex-col items-center justify-center bg-white">
        <div className="container flex flex-row">
          <div className="pl-32 container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
            <div className="divide-y divide-slate-100">
              <List>
                {movies.map((movie) => (
                  <ListItem key={movie.id} movie={movie} />
                ))}
              </List>
            </div>
          </div>
          {/* <div className="pl-28 container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
            <div className="divide-y divide-slate-100 ">
              <AuthShowcase/>
            </div>
          </div> */}
          <div className="container flex flex-col items-center mt-8 ">
              <AuthShowcase />

          </div>
        </div>

      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    // <div className="flex flex-col items-center justify-center gap-4 ">
    //   <p className="text-center text-2xl text-white ">
    //     {sessionData && <span>Hi {sessionData.user?.name}</span>}
    //     {secretMessage && <span> - {secretMessage}</span>}
    //   </p>
    //   <button
    //     className="rounded-full bg-white/10 px-10 py-3 font-semibold text-black no-underline transition hover:bg-white/20"
    //     onClick={sessionData ? () => signOut() : () => signIn()}
    //   >
    //     {sessionData ? "Sign out" : "Sign in"}
    //   </button>
    // </div>
    <div className="flex flex-col items-center  sticky top-0 ">
      <p className="text-center text-2xl text-stone-400 mt-8 mb-2">
      {sessionData ? `Hi ${sessionData.user?.name}, choose your seat!` : "Buy a ticket, go to the cinema, and enjoy the movie!"}
      </p>
      <div className="bg-violet-600 w-56 h-9 text-center text-white mb-4 font-bold">
        SCREEN
      </div>
      <SeatMap />
    </div>
  );
};

export const getStaticProps = async () => {
  const res = await Axios.get("http://localhost:3000/api/trpc/movies.getAll");
  return {
    props: res.data,
  };
}
