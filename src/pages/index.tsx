import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import Axios from 'axios';
import React from "react";

import { trpc } from "../utils/trpc";

const Home: NextPage = (props) => {
  const movies = props['results'];
  // console.log(Array.isArray(movies));
  const hello = trpc.example.hello.useQuery({ text: "from tRPC" });


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#3d5a80] to-[#cbf3f0]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-black sm:text-[5rem]">
            Welcome to <span className="text-[hsl(280,100%,70%)]">CineMarmot</span>ðŸŽ¬
          </h1>


          <div className="grid grid-cols-4 gap-5">
            {movies.map((movie:any) => (
              <div className="flex justify-center" key={movie.id}>
                <div className="flex flex-col  md:max-w-xl shadow-lg">
                  <img className=" w-full h-96 md:h-auto object-cover md:w-60 " src={`https://image.tmdb.org/t/p/original${movie.poster_path}`} alt="" />
                  <li className="flex text-black p-4">{movie.original_title}</li>
                </div>
              </div>
            ))}
          </div>
          <div className="flex flex-col items-center gap-2">
            <p className="text-2xl text-white">
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
            </p>
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-black no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};

export const getStaticProps = async () => {
  const res = await Axios.get("https://api.themoviedb.org/3/movie/upcoming?api_key=b7cd3340a794e5a2f35e3abb820b497f&language=en-US&page=1&region=TW");
  return {
    props: res.data,
  };
}
